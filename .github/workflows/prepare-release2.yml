name: Pull Request Checks2

on: [pull_request]

jobs:
  get-version:
    # Environment
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }} # needed for 'codacy/git-version'
          fetch-depth: 0 # needed for 'codacy/git-version'

      - name: "Update Release CHANGELOG"
        id: update-release-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: false
          stripHeaders: false
          base: "CHANGELOG.md"
          headerLabel: "# Changelog"
          breakingLabel: '### Breaking'
          enhancementLabel: '### Enhancements'
          stripGeneratorNotice: true
          bugsLabel: '### Fixes'
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          author: false
          verbose: true

      - name: Extract New Release Version
        id: extract-release-version
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '## \[(?<version>.+?)\]'
          regex_flags: 'gim'
          search_string: ${{ steps.update-release-changelog.outputs.changelog }}

      - name: Echo New Release Version
        run: echo "New Release Version is ${{ steps.extract-release-version.outputs.first_match }}"

    outputs:
      changelog: ${{ steps.update-release-changelog.outputs.changelog }}
      version: ${{ steps.extract-release-version.outputs.first_match }}

  build:
    needs: [ get-version ]
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['3.1.x', '5.0.x', '6.0.x']

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK  ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Nuget Packages
        run: dotnet restore

      # Build
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Run MSBuild
        run: msbuild /property:Configuration=Release /p:Version=${{ needs.get-version.outputs.version }}

      # Generate changelog
      # Commit changelog
      - name: "Commit changes"
        if: ${{ github.repository_owner == 'TraGicCode' }} # investigate this for security concerns and learning
        run: |
          git config --local user.email "${{ github.repository_owner }}@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Release prep v${{ steps.gv.outputs.ver }}"

      # Create pull request and push
      # investigate if i want to use this
      # Check 
      - name: Create Pull Request
        id: cpr
        uses: puppetlabs/peter-evans-create-pull-request@v3
        if: ${{ github.repository_owner == 'TraGicCode' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Release prep v${{ steps.gv.outputs.ver }}"
          branch: "release-prep"
          delete-branch: true
          title: "Release prep v${{ steps.gv.outputs.ver }}"
          body: |
            Automated release-prep through [pdk-templates](https://github.com/puppetlabs/pdk-templates/blob/main/moduleroot/.github/workflows/auto_release.yml.erb) from commit ${{ github.sha }}. 
            Please verify before merging:
            - [ ] last [nightly](https://github.com/${{ github.repository }}/actions/workflows/nightly.yml) run is green
            - [ ] [Changelog](https://github.com/${{ github.repository }}/blob/release-prep/CHANGELOG.md) is readable and has no unlabeled pull requests
            - [ ] Ensure the [changelog](https://github.com/${{ github.repository }}/blob/release-prep/CHANGELOG.md) version and [metadata](https://github.com/${{ github.repository }}/blob/release-prep/metadata.json) version match
          labels: "maintenance"

    - name: PR outputs
      if: ${{ github.repository_owner == 'TraGicCode' }}
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
        echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"